# version: '3.8'

services:
#  pgadmin:
#    container_name: pgladmin
#    image: dpage/pgadmin4:latest
#    environment:
#      PGADMIN_DEFAULT_EMAIL: logicflare@logicflare.com
#      PGADMIN_DEFAULT_PASSWORD: root@Logicflare2024
#      PGADMIN_LISTEN_PORT: 80
#      SCRIPT_NAME: /pgadmin
#      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
#      PGADMIN_CONFIG_PROXY_X_FOR_COUNT: 1
#      PGADMIN_CONFIG_PROXY_X_PROTO_COUNT: 1
#      PGADMIN_CONFIG_PROXY_X_HOST_COUNT: 1
#      PGADMIN_CONFIG_PROXY_X_PREFIX_COUNT: 1
#    networks:
#      - tech-challenge-network
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    restart: always
#    ports:
#      - "8081:80"

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - tech-challenge-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  api-rest:
      container_name: api-rest
      build:
          context: .
          dockerfile: Dockerfile
      environment:
           SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/tech_challenge_db
           DB_USER: postgres
           DB_PASSWORD: root
           DB_NAME: tech_challenge_db
           JWT_SECRET: my-super-secret-jwt-key-change-this-in-production
           SPRING_RABBITMQ_HOST: rabbitmq
      networks:
          - tech-challenge-network
      ports:
          - "8080:8080"
      restart: always

  api-graphql:
    container_name: api-graphql
    build:
      context: ../API-GRAPHQL-TECH-CHALLANGE-3
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/tech_challenge_db
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: tech_challenge_db
      JWT_SECRET: my-super-secret-jwt-key-change-this-in-production
      SPRING_RABBITMQ_HOST: rabbitmq
    networks:
      - tech-challenge-network
    ports:
      - "8082:8080"
    restart: always

  api-consumer:
    container_name: api-consumer
    build:
      context: ../API-CONSUMER-TECH-CHALLANGE-3
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/tech_challenge_db
      DB_USER: postgres
      DB_PASSWORD: root
      DB_NAME: tech_challenge_db
      JWT_SECRET: my-super-secret-jwt-key-change-this-in-production
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_RABBITMQ_HOST: rabbitmq
    networks:
      - tech-challenge-network
    ports:
      - "8083:8080"
    restart: always

volumes:
  pgadmin_data:

networks:
  tech-challenge-network:
    driver: bridge
